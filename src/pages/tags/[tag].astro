---
//This page makes individual pages dynamically from all the tags used in the blog posts
//The brackets around this file name means its not a page itself but instead makes other pages as described below
import BaseLayout from "../../layouts/BaseLO.astro";
import Formatter from "../../components/BlogListFormatter.astro";

//allows astro to grab the files in collection
import { getCollection } from "astro:content";

// If you need information to construct the page routes, write it inside getStaticPaths().
export async function getStaticPaths() {
	const allPosts = await getCollection("blog");
	const uniqueTags: string[] = [
		...new Set(allPosts.map((post) => post.data.tags).flat()),
	];

	// A getStaticPaths function should always return a list of objects containing
	//params (what to call each page route) and optionally any props (data that you
	//want to pass to those pages). https://docs.astro.build/en/tutorial/5-astro-api/2/
	return uniqueTags.map((tag) => {
		const filteredPosts = allPosts.filter((post) =>
			post.data.tags.includes(tag)
		);
		//the params tag here is the name of each dynamic route
		//the props variable is the data to pass to each page
		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}

// Makes the props available in the below component template outside of the above function
const { tag } = Astro.params;
// Here the posts passed to props is a superset of the posts pass to each page in the above function
const { posts } = Astro.props;

// The following is the layout of what will apear on the dynamicly made static paths
---

<BaseLayout title=`My ${tag} Blog Posts` , heading=`Only ${tag}`>
	<p class="text-lg font-medium">Posts tagged with {tag}</p>
	<ul>
		{
			posts.map((post) => (
				<Formatter
					url={`/blog/${post.slug}/`}
					draft={post.data.draft}
					title={post.data.title}
					pubDate={post.data.pubDate}
					tags={post.data.tags}
				/>
			))
		}
	</ul>
</BaseLayout>
